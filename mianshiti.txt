# Fighting

#### 判断回文数字

1.判断长度，小于0，不是回文数

```java
class Solution {
    public boolean isPalindrome(int x) {
        if (x < 0 || (x % 10 == 0 && x != 0)) {
            return false;
        }
        int a = 0;
        while (x > a) {
            a = a * 10 + x % 10;
            x = x / 10;
        }
        return x == a || x == a / 10;
    }
}
```



#### 状态码

200 请求成功
301 - 资源被永久重定向
302 - URL被临时重定向
304 - URL被重定向但是具有缓存
400 - BadRequest 一般是请求参数格式错误
403 - 服务器知道这个链接，但是被拒绝访问
404 - 资源不存在
500 - 服务器内部错误
502 - BadGateWay

#### HTTP 输入网址到页面渲染成功的过程有哪些

1. 查找、解析DNS域名，（DNS （Domain Name System）服务是和 HTTP 协议一样位于应用层的协议）；
   （先去搜索浏览器自己DNS - 域名与IP地址的对应表，*（DNS协议是使用UDP协议）*）
    如果没有（再去搜索自己电脑的DNS缓存 ）
    如果没有，再去搜索自己操作系统 host文件对应的DNS缓存
    如果没有，再去搜索路由器当中的DNS缓存

2. 建立TCP链接- 发起TCP的三次握手过程

>    三次握手过程
>   发送端发送一个Sny 标志的数据给接收端，接收端收到后返回一个Sny、ACk 待有同步标志、和确认标志的数据以表示这个信息被收到，但是还需要发送方确认这个消息被收到
>   发送端收到以后再返回一个带有ack的数据，表示三次握手结束
>
>   三次握手用来确认两个方向上的数据传输通道是否正常，防止数据丢失
>


3. 发起Http请求

4. 服务端响应Http请求，处理之后返回给浏览器

5. TCP断开连接，发起四次挥手过程

  > 1. 发送端先发送一个带有Finish标志的数据包给接收端，然后进入等待状态1，接收端收到以后马上给发送端发送带有ack标志的数据表给发送端，发送端进入Finish-wait2
  > 2. 此时发送端继续传输数据把没有传输完的数据传输玩，传输完以后发送一个带有Finish Ack 的数据包给发送端，发送端收到以后，发送一个Ack的数据包，标志四次握手结束

6. 浏览器处理HTML代码，加载、解析、渲染页面，最终呈现给用户

####  Http的特点是无状态的， Https 安全性的实现是怎么实现的？

 	Https 是在TCP 和 Http之间加了一层SSL协议，来保证安全性。是加密 + 认证 + 完整性保护的HTTP协议，加密技术用到了对称加密、非对称加密。
 	认证是证书认证，端口认证

####  HTTP/1.1 定义的请求方法有8种：

GET、POST、PUT、DELETE、PATCH、HEAD、OPTIONS、TRACE

1.  常见的请求报文的请求头部
    1.accept-Encoding
    2.accept-charset
    3.Accept-Language
    4.Date
    5.Host	
    6.Connection

 **常见的响应报文的首部**
 1.Content-

Git操作： 
`pull == fetch + merge`
`远程版本库 Github、Gitlab` 

#### 客户端测试采取过哪些专项测试？

 除了日常的功能测试，最常见的专项测试是 ：
 1）兼容性测试

 2）弱网测试 ，除了WiFi，还有234G（charles硬延迟）

 3）稳定性（monkey）

 4）流量、电量、资源消耗等性能测试等（GT）



#### 请问你认为单元测试可行吗？

可行的。单元测试测试的更加全面，可以有效的测试某个模块的代码思路逻辑

#### 黑盒测试和白盒测试有哪些方法

黑盒测试：
	等价类划分、边界值测试、场景测试、正交图法、异常场景测试、【因果图法、异常场景推断法】
白盒测试：
	基本路径覆盖法、逻辑覆盖、循环覆盖、代码检查法、静态结构分析法
	逻辑覆盖：
		判定覆盖法、条件覆盖法、判定条件覆盖法、
		
2.变态跳



3.删除链表中的一个节点

```
class Solution {
    public ListNode deleteNode(ListNode head, int val) {
        if(head.val == val) return head.next;
        ListNode pre = head, cur = head.next;
        while(cur != null && cur.val != val) {
            pre = cur;
            cur = cur.next;
        }
        if(cur != null) pre.next = cur.next;
        return head;
    }
}
```

https://mp.weixin.qq.com/s/XEYUgC_76cEzwMNWQu1UiQ

-----------------------------------------------------------------------------

题目来源：https://www.cnblogs.com/z1201-x/p/11149249.html

#### 1、链表
1、手写代码：一个单向链表，每个节点上都有一个value；给定 一个 value，将该 value 之前的所有 value返回

```
先判断value是否存在，不存在返回空；
存在遍历，将value之前的节点加入到一个List中，然后返回
```

2、手写代码：**怎么判断链表有环，怎么找环节点

```

```

3手写代码：一个单向链表，给出头结点，找出倒数第N个结点，要求O（N）的时间复杂度；

```
双指针法，
```

4.请问如何判断一个单向链表存在回路？

5请问如何判断一个链表是否有环

6请问如何判断两个链表是否相交

7、手写代码：将一个数组指定offset后面的元素前置，可采用链表实现

8、手写代码：循环链表插入元素

#### 2、数组
1、手写代码：合并两个排序数组  
先合并成一个数组，然后再排序

2.手写代码：最大子数组问题（要求时间复杂度最佳）
【不知道】

3.手写代码：筛选数组arr中重复的元素，考虑时间复杂度。
1.使用额外空间，Map，计算出现次数
2.不适用额外空间不会 【 加强 】

4.写出一个函数，输入是两个数组，输出是将两个数组中所有元素排序以后用一个数组输出。

5、 请看一下这个小型的算法题，有一个长度未知的无序数组(无法获取数组长度，不许排序，数组元素为int范围内的任意值)，如何找出第一个连续出现的重复的数(比如 4 3 4 3 5 5，找出的数是5)

6手写代码：合并两个有序数组

7.手写代码：有三种面值的硬币k1 < k2 < k3 ，找k面值的零钱，最少需要多少硬币

8手写代码：合并有序数组

9.手写代码：一个数组找出重复的元素

10.请问如何防止数组越界

11、请回答数组和链表的区别，以及优缺点，另外有没有什么办法能够结合两者的优点

1. 数组：查询快，查询的时间度是O(1), 但是插入或删除元素慢，需要移动元素，时间复杂度是O(N)
2. 链表：更新操作快，插入删除快，不要移动元素，时间复杂度O(1)，查询慢，时间复杂度是O(N)
3. HashMap 可以结合两者的优点

#### 3、复杂度
1.一行里有很多IP地址，互相之间用 || 隔开，共有一万行。要求：取双竖线分隔的倒数第二列所有的IP地址并且去重并输出每个IP地址的出现次数。

2、手写代码：硬币找零问题（要求时间复杂度最佳）

#### 2、排序
1、请问Java中collection的sort方法，默认的排序方法是什么

2、手写代码：合并两个排序数组

3.请问有哪些排序算法  冒泡、快速、选择、插入、桶排序、希尔排序

查找方法有哪些： 顺序查找、二分查找

4.手写代码：冒泡排序  
ok

5手写代码：统计排序数组中出现次数最多的元素出现的次数？  
//使用HashMap来存储单词及出现的次数，然后把value值放到Collection中，再用Collection.max()计算最大值，找到最大值的对应的key即可

```
public class HashMapTest1
{
    /**
     * 找出一个数组中一个数字出现次数最多的数字
     * 用HashMap的key来存放数组中存在的数字，value存放该数字在数组中出现的次数
     * @author xiaoluo
     */
    public static void main(String[] args)
    {
        int[] array = {2, 1, 2, 3, 4, 5, 2, 2, 2, 2};
        

​    //map的key存放数组中存在的数字，value存放该数字在数组中出现的次数
​    HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
​    
​    for(int i = 0; i < array.length; i++)
​    {
​        if(map.containsKey(array[i]))
​        {
​            int temp = map.get(array[i]);
​            
​            map.put(array[i], temp + 1);
​        }
​        else
​        {
​            map.put(array[i], 1);
​        }
​    }
​    
​    Collection<Integer> count = map.values();
​    
​    //找出map的value中最大的数字，也就是数组中数字出现最多的次数
​    int maxCount = Collections.max(count);
​    
​    int maxNumber = 0;
​    
​    for(Map.Entry<Integer, Integer> entry : map.entrySet())
​    {
​        //得到value为maxCount的key，也就是数组中出现次数最多的数字
​        if(maxCount == entry.getValue())
​        {
​            maxNumber = entry.getKey();
​        }
​    }
​    
​    System.out.println("出现次数最多的数字为：" + maxNumber);
​    System.out.println("该数字一共出现" + maxCount + "次");
    }

}
```

6.请你说一下堆排序的思想？以及怎么初始建堆？是否稳定？
难 - 需加强

7、手写代码：数组的2-sum,3-sum,问题（leetcode原题）

1. 2-sum 
   1.可以使用两层for循环遍历，是否存在两个数a[i]+a[j] == sum 存在则返回这两个数
   2.使用 a = sun - b 的方法来找
2. 如果是3sum呢，4sum



8、手写代码：5个扑克牌是否是顺子，大小王当成任意的

9、请你说一说快速排序，并手写代码

```
快速排序思想：
1.快速排序就是找一个准基数如最左侧的数，两个哨兵最左最右两个数，然后找到从右往左找比准基数小的数，从左往右找比准基数大的数，找到之后交换这两个数的位置；
2.如果在移动两个哨兵位置在同一个地方，那个把这个地方的数和准基数交换，至此，这一串数被拆分成两组数。
```

10、你最熟悉什么算法？给我说一下原理或者排序过程？它的优缺点是什么？你知道什么排序算法，介绍他们的实现方法，时间复杂度和空间复杂度，是否稳定，快排基准点怎么选择

11、请你说一下快排如何实现？

    public static void quickSort(int[] arr,int low,int high){
        int i,j,temp,t;
        if(low>high){
            return;
        }
        i=low;
        j=high;
        //temp就是基准位
        temp = arr[low];
    
        while (i<j) {
            //先看右边，依次往左递减
            while (temp<=arr[j]&&i<j) {
                j--;
            }
            //再看左边，依次往右递增
            while (temp>=arr[i]&&i<j) {
                i++;
            }
            //如果满足条件则交换
            if (i<j) {
                t = arr[j];
                arr[j] = arr[i];
                arr[i] = t;
            }
    
        }
        //最后将基准为与i和j相等位置的数字交换
        arr[low] = arr[i];
        arr[i] = temp;
        //递归调用左半数组
        quickSort(arr, low, j-1);
        //递归调用右半数组
        quickSort(arr, j+1, high);
    }

#### 3、树
1、请你说一下BST的特点，并**手写代码判断一棵树是不是BST

2、手写代码：给一个二叉树，怎么得到这棵树的镜像

3、手写代码：通过前序和中序还原二叉树

4.手写代码：求二叉树每层最大值

5、手写代码：两个平衡二叉树合并是怎么做的

6、手写代码：求全体二叉树节点最大值

7、手写代码：二叉树深度优先遍历

#### 4、递归
1.手写代码：青蛙跳台阶

#### 5、字符串
1、手写代码：两个字符串的最长公共子序列？

2、手写代码：字符串逆序

3.手写代码：字符串复制函数

4.手写代码：驼峰字符串问题，给定一个驼峰样式的字符串例如“AaABbBcBbcvQv........”->“bc”，两个一样的字符夹着一个不一样的字符， 处理这个字符串去掉所有的驼峰。

5、手写代码：给一个字符串找出第一个只出现一次的字符位置

#### 6、堆与栈
1.请你说一说堆和栈的区别*

2、请问有一些数，每次可以插入，或者取出第1/4大的数，应该用什么数据结构？

#### 7、动态规划

1.系统会给定一串数字让玩家选择，如果玩家选中一个数字，比如M，那么玩家获得M分，但同时当前选中的M，以及这串数字中所有的M+1和M-1将会全部消失。玩家可以继续选择得分，直到串为空。最终系统会根据玩家获得的积分发送奖励，积分越高，奖励越丰厚。例如系统给定的数字是[2,3,3,3,4], 如果玩家选定了2，玩家得2分，并且选中的2和所有的1和3会消失，那么数组只剩下[4]，玩家再选择4，数组为空，此时一共获得6分如果玩家首先选中的是3，那么玩家得3分，选中的3，以及2和4都会消失，数字剩下[3,3]，第二次和第三次玩家可以再次选择3，这样选择一共得9分，这也是最优的选择方式。

2、手写代码：给一个英文文本“i have a dream i am a human you can have dream too.”再给一个文本“i you am ”，要求计算出第一个文本中包含第二个文本每个单词的最短文本，比如例子中最短文本就是“i am a human you”。**

3、手写代码：给你一个格子，一个人在格子的左上角，他只能向右走一步，或者向下走一步，他走到右下角共有多少种方法**

4、请你讲一下动态链表和静态链表的区别

5、请你说一下递归和动态规划的区别?

6、手写代码：01背包

#### 8、高级算法

1、手写代码：LCS问题

2、请问你知道什么加密算法吗

3、手写代码：斐波那契数列

9、查找
1、手写代码：二分查找的代码

2、一个二维坐标系，给你n个点的坐标，画一条直线把他们分成两份（任意直线），要求数量尽量等分，复杂度不能太高。

10、哈希
1、请你说一下哈希表是做什么的？另外哈希表的实现原理也说一下

2、现在有100W个账户密码，要存起来，要求查找时速度尽可能快，你选择什么数据结构？为什么？

11、图
1、请问你对图论算法了解多少？（BFS,DFS,最短路径，最小生成树，最小割最大流...）平常有用过吗？



---
#### 5.9 测试题：



1. 项目经验

2. 测试的过程

3. 京东登录页面怎么测？
京东登录页面：

4. 如果一个普通用户，他的百度首页打不开，问题怎么定位？写出定位流程。
定位：
1.功能没有问题
2.网路问题：弱网
3.兼容性问题
4.手机性能问题：内存消耗
5.并发问题

5、问简历上的第一个项目的详细情况，包括测试用例怎么写？怎么判断测试通过？项目的原理？
测试用例+正常情况，异常情况、时间权限、

6、如果是做功能测试，能接受吗？

7、说一下你们工作中的测试流程
	1.需求评审 2.测试用例设计 3.项目测试，bug跟踪验证 4.项目上线，总结测试报告 5.上线回归测试，上线跟踪报告
8、用她的手机给我看了下百度贴吧的发帖功能的界面，给我张纸，让我写出测试点（只需要考虑内容，表情，添加图片，@功能），写完讲一遍逻辑。

9  针对发朋友圈这个功能设计你的测试用例，请给出用例分类与典型用例场景


10. Java 中的容器有哪些？它们的区别和特性？

11. Git 的常见操作，如 git stash
      1.git add 
      2.git commit -m
      3.git pull  = fetch + merge
      4.git push
      5.git fetch
      6.git merge
      7.git branch
      8.git checkout 
      9.git branch -b  新建并切换到新分支上
      10.git stash 把当前分支的内容不放入暂存区，而是暂时存储起来等下次再用  git stash apply
12 Java 的接口与抽象类的区别
      1.接口里面的方法是public的。而抽象类的方法的修饰词可以是其他的public protected private
      2.接口只能有抽象方法，抽象类里面既可以有抽象方法也可以有非抽象方法
      3.接口和抽象类都可以有静态成员变量
      4.接口不能有静态方法，而接口可以有静态方法

13 TCP 和 UDP 的区别？如何保证 TCP 的可靠性？
	1.是否面向连接？
	TCP通过三次握手，建立连接。
	UDP是不用建立连接。
	2.是否可靠？
	TCP传输的是可靠并有序的数据
	UDP只是尽最大努力交付，不一定可靠
	3.UDP具有较好的实时性  适用场景：短消息，多客户端，对信息可靠性要求不高，对效率要求高。
	4.每一条TCP是点对点的，UDP支持更广泛 一对一，多对一，多对多。
	5.TCP对资源要求较高，UDP对资源要求较少。
	6.TCP面向数据流，  UDP面向数据报。

14  打开一个网页都发生了哪些事？
	1.查找解析DNS域名
	2.建立TCP连接，发起三次握手过程
	3.发送请求
	4.服务器响应请求，返回响应结果
	5.断开TCp连接，发起四次挥手过程
	6.浏览器对HTML代码进行解析，渲染页面，最终呈现给用户

15  对工作上的压力怎么看待？

16 继续问项目经验和技术难点

17了解现在的工作环境，背景等

18. 户口，家庭情况，伴侣工作等

19  问上一份工作的公司是做什么的？离职原因？自己的职业发展规划?

20 遇到的某个难点是什么？如何解决的？

21. 自己解决的最亮点的技术难点是什么？

22 你用jmeter做什么测试？
	接口自动化测试 - 用于回归测试，和接口测试

23  如果有一个登录接口需要服务端返回参数，再带着这个参数去请求才能完成登录，用jmeter 怎么做？
	使用Jmeter的正则表达式提取器，把参数提取参数
24  请问你们公司是如何做接口测试的？

25  接口测试质量评估标准是什么？

26  对接口测试这块熟不熟？是怎么测的？用的什么工具？为什么用 HTTPClient 类库，觉得它有什么缺点？用 Fiddler 主要做什么？

27  请问你们公司是如何做性能测试的？请讲诉性能测试的相关指标？

28  压力测试和负载测试的区别

29  服务器中一般要监控哪些数据，如何监控的，怎么从监控数据中发现问题？

30  性能测试用过吗？什么情况下用的？主要测哪些方面？

31 性能测试关注哪些指标？

32 对于多环境（联调环境、测试环境、预发布环境）如何让接口用例支持多套环境，说出你的做法

33  如果接口返回数十个字段，如何批量校验这些字段的正确性，请说出你的方法？

34 假设系统A调用系统B，我把B的接口都mock了，进行性能测试，这样有什么好处和坏处？

35 有一天早上打车高峰，滴滴服务端挂了大概30分钟，工程师抢修之后，马上上线，之后又挂了，请问有哪些原因会造成这个情况？

36 请问Monkey测试的优缺点？

37 如果使用monkey发现了一个毕现闪退，请问怎么使用monkey重现它？

38  UI 测试的过程

39  自动化测试用例怎么来？

40  你项目中有多少case，通过率怎么样？

41  报告哪里来，主要统计什么？

42  做自动化测试的目的？

43  如何看待自动化和手动测试？怎样的一个比例才是健康的？

44 你们公司的自动化投入产出比怎样？效益怎样？

45 自动化测试用例的覆盖率多少？

46 完整运行一次自动化用例需要多久时间？

47  什么是分层自动化？

48 你的测试数据是怎么准备的？

49  测试脚本的维护成本是怎么样的？

50 问第一个项目的测试框架的搭建、怎么用数据驱动测试？

51  Web View 怎么测试？

52  请问你的定位策略是什么？

53  请问如何实现用例失败或者异常时候需要截图？

54  请问如何分布式执行webdriver用例？

55  如何在脚本中执行 JavaScript 代码？

56  Appium 的定位策略有哪些？

57  请简述Appium的原理

58 iOS 和 Android 的 UI 自动化的原理是什么？

59  当定位策略都失败的时候，你该怎么做？

60  UI 测试做的是 iOS 还是 Android？讲讲 iOS 的 UI 怎么测？

61 获取 Appium 中的 content-desc 不为空的控件列表，代码不限。

62  并行运行 Appium 需要修改哪些参数

63  你如何用Selenium测试

64  Selenium的工作原理？

65 常见的定位方式？

66  上传图片的几种方式？

67  如何处理动态元素？

68  你是怎么开发测试框架的？

69  PO模型是怎么做的？

70  失败截图的原理是什么？

71 你常用的命令是什么？

72 用什么查看log？

73 如何查找一个文件大小超过5M的文件

74 如何查看进程？

75  Linux 中查找某个文件并删除它

76  Linux 查询 CPU、内存的指令 

77 使用 Shell 获取 Nginx log 中接口包含 topic 且状态码为 200 的接口平均响应时间（越严谨越好）

78  每隔 2s 获取某个进程的 CPU 和 mem 数据并保存到 csv 数据文件

 79  快排的实现  (代码实现)

80   算数组中查找出现次数过半的数（代码实现）

81   查找链表的倒数第三个数（代码实现）

82    什么是面向对象编程？

83  讲下Java多线程的使用

84  有三个线程T1，T2，T3，怎么确保它们按顺序执行？

85  Thread 类中的start() 和 run() 方法有什么区别？

86   请写一个线程安全的单例模型

87  请写出冒泡排序

88   1~9999数列中数字3出现的次数。用递推方法解出。

89  从一个数组中找出前4个最大的数，用最优解。

90   写一段程序，删除字符串a中包含的字符串b，举例 输入a = "asdw",b = "sd" 返回 字符串 “aw”，并且测试这个程序。

91  写一个方法，把字符串转为数字，比如 str="1234"，变成 int 1234。并且测试这个程序

92  A、有两个有序链表，将他们组成一个有序链表。

93  给一个字符串，字符串里有 （）{}[]“”这六个符号，设计一个算法,判断这些符号是否成对匹配，即要检验这些括号是否都是成对出现的。

94  有两个字符串类型的数字，实现一个方法将它们进行相加，并返回相加后的数值。（要考虑数据的长度问题）

95  Java 多线程的创建

96  算法：二叉树的深度计算

96  算法：一亿个无序数找出 Top 100（这个也没写好，空间复杂度高了，应该用堆排序）

97  说下左连接和右连接

98 介绍下什么是索引

99 使用sql生产10万条数据

100 给你一张表，根据要求写sql，这个题目比较多，自己百度吧。

101  数据库熟吗？用过哪些数据库？索引会吗？事务了解吗？写一个 SQL 查询语句:给一个字段，对其进行从大到小排序,取前十行。

 102 new 对象的过程

```
注意：Person people = new Person()
Java：此处people是对象的引用；new Person() 是生成了对象，并且返回了对象的地址，引用指向对象的地址

过程
1. 为对象开辟内存空间 
2. 调用构造方法
3. 将生成的对象的地址返回
也有 /* 实例化对象 */
Object referenceVariable = new Constructor();
这里特别的是 new Constructor();  很好的体现了new 对象的过程
如果要调用含参的构造函数，那么就要与构造函数参数一致（参数个数、参数类型、参数位置一致）

```

许多经典题

https://leetcode-cn.com/circle/discuss/HHZBlM/